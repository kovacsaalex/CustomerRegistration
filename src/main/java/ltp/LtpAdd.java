package ltp;

import client.Client;
import database.dataBaseSql;
import java.sql.SQLException;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import regex.RegexSample;
import repository.*;
import java.io.IOException;
import readExcel.DataExcel;
import fileChooser.FileChooser;



/**
 *
 * @author ali
 */
public class LtpAdd extends javax.swing.JFrame {
 private RegexSample regex = new RegexSample();
 private ReposDataBase data = new dataBaseSql();
 private FileChooser openChooseFile = new FileChooser();
  
 private int szerzOsszeg = 0;
 private int LtpFutamido = 0;
 private int dBSzam = 0;
 private LocalDate ltpStartnull = LocalDate.of(1000, 01, 01);
 private LocalDate ltpEndnull = LocalDate.of(1000, 01, 01);
 private int clientid =0;
 

    /**
     * Creates new form LtpAdd
     */
    public LtpAdd() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ltpId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ltpStart = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ltpTerm = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ltpEnd = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ltpNumbers = new javax.swing.JTextField();
        lptTermCalculate = new javax.swing.JButton();
        ltpSaveButton = new javax.swing.JButton();
        ltpEditButton = new javax.swing.JButton();
        ltpReadCsv = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        ltpAmount = new javax.swing.JTextField();
        iDReadButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        LtpiDLabel = new javax.swing.JLabel();
        ammountCheck = new javax.swing.JLabel();
        startCheck = new javax.swing.JLabel();
        termCheck = new javax.swing.JLabel();
        endCheck = new javax.swing.JLabel();
        numberCheck = new javax.swing.JLabel();
        idCheck = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("LTP Hozzáadása ugyfélhez :");

        jLabel2.setText("Ügyfél Id :");

        ltpId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ltpIdActionPerformed(evt);
            }
        });
        ltpId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ltpIdKeyTyped(evt);
            }
        });

        jLabel3.setText("Megkötés ideje :");

        ltpStart.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ltpStartKeyTyped(evt);
            }
        });

        jLabel4.setText("Futamidő (hónapban) :");

        ltpTerm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ltpTermKeyTyped(evt);
            }
        });

        jLabel5.setText("Lejárat :");

        ltpEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ltpEndActionPerformed(evt);
            }
        });
        ltpEnd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ltpEndKeyTyped(evt);
            }
        });

        jLabel6.setText("Megkötések száma : ");

        ltpNumbers.setToolTipText("");
        ltpNumbers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ltpNumbersKeyTyped(evt);
            }
        });

        lptTermCalculate.setText("Számol");
        lptTermCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lptTermCalculateActionPerformed(evt);
            }
        });

        ltpSaveButton.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        ltpSaveButton.setText("Ment");
        ltpSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ltpSaveButtonActionPerformed(evt);
            }
        });

        ltpEditButton.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        ltpEditButton.setText("Módosítás");
        ltpEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ltpEditButtonActionPerformed(evt);
            }
        });

        ltpReadCsv.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        ltpReadCsv.setText("Beolvasás Fájlból");
        ltpReadCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ltpReadCsvActionPerformed(evt);
            }
        });

        jLabel7.setText("Havi befizetés :");

        ltpAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ltpAmountActionPerformed(evt);
            }
        });
        ltpAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ltpAmountKeyTyped(evt);
            }
        });

        iDReadButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        iDReadButton.setText("Id beolvasása ");
        iDReadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iDReadButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Id:");

        LtpiDLabel.setText("*");

        deleteButton.setText("Töröl");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ltpReadCsv, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ltpSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iDReadButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ltpEditButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ltpAmount)
                            .addComponent(ltpId, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ltpStart, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ltpTerm, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ltpEnd, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ltpNumbers, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(endCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lptTermCalculate)
                                .addGap(71, 71, 71))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(startCheck)
                                    .addComponent(ammountCheck)
                                    .addComponent(termCheck)
                                    .addComponent(numberCheck)
                                    .addComponent(idCheck))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LtpiDLabel)
                        .addGap(36, 36, 36))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(LtpiDLabel))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ltpId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ltpAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ammountCheck))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ltpStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startCheck))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ltpTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(termCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ltpEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lptTermCalculate)
                    .addComponent(endCheck))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ltpNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberCheck))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ltpSaveButton)
                    .addComponent(ltpEditButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ltpReadCsv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(iDReadButton)
                    .addComponent(deleteButton))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ltpSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ltpSaveButtonActionPerformed
      
        // null check     
        if (!ltpAmount.getText().isEmpty()) {
            szerzOsszeg = Integer.parseInt(ltpAmount.getText());
        }
        if (!ltpTerm.getText().isEmpty()) {
            LtpFutamido = Integer.parseInt(ltpTerm.getText());
        }
        if (!ltpNumbers.getText().isEmpty()) {
            dBSzam = Integer.parseInt(ltpNumbers.getText());
        }
        if (!ltpStart.getText().isEmpty()) {
            ltpStartnull = LocalDate.parse(ltpStart.getText(), DateTimeFormatter.ISO_DATE);

        }
        if (!ltpEnd.getText().isEmpty()) {
            ltpEndnull = LocalDate.parse(ltpEnd.getText(), DateTimeFormatter.ISO_DATE);
        }
        // end null check       
                  
        try {
        //    ReposDataBase insert = new dataBaseSql();         
               
                    if (!ltpId.getText().isEmpty()) {

                        try {
                            int clientid = Integer.parseInt(ltpId.getText());
                            Client lista = data.findbyIdClients(clientid);
                            int x = lista.getId();

                        } catch (NullPointerException e) {
                            JOptionPane.showMessageDialog(rootPane, "Nincs ilyen ügyfél Id!");
                        }                    
                        
                        data.insertLtp(new Ltp(Integer.parseInt(ltpId.getText()), szerzOsszeg,
                            ltpStartnull    ,   LtpFutamido, ltpEndnull
                               ,dBSzam ));
                  //        public Ltp(int ugyfelId, int szerzOsszeg, LocalDate ltpStart, int LtpFutamido, LocalDate ltpEnd, int dBSzam) {
                        if (data.sqlIdCount() != 0) {
                            JOptionPane.showMessageDialog(rootPane, "Az adatok rögzítésre kerültek! Id: " + data.sqlIdCount());
                        }

                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Az Ügyfél ID nem lehet üres",
                                "Hiba!", JOptionPane.INFORMATION_MESSAGE);
                    }

             
        } catch (DateTimeException | SQLException |NumberFormatException e) {
           System.out.println("salal"+e.getMessage());
            
        }

    }//GEN-LAST:event_ltpSaveButtonActionPerformed

    private void lptTermCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lptTermCalculateActionPerformed
        try {
           if (ltpTerm.getText().isEmpty()) {
                ltpTerm.setText("0");
            }
           LocalDate st = LocalDate.parse(ltpStart.getText(), DateTimeFormatter.ISO_DATE);
           LocalDate trm = st.plusMonths(Integer.parseInt(ltpTerm.getText()));
           DateTimeFormatter formatter = DateTimeFormatter.ISO_DATE;
           String formattedString = trm.format(formatter);
           ltpEnd.setText(formattedString);
           endCheck.setIcon(regex.getIconeOk());
        } catch (DateTimeException e) {
            JOptionPane.showMessageDialog(rootPane, "Dátum formátum nem megfelelő (ÉÉÉÉ-HH-NN) !" );
        }
    }//GEN-LAST:event_lptTermCalculateActionPerformed

    private void ltpEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ltpEndActionPerformed

    }//GEN-LAST:event_ltpEndActionPerformed

    private void ltpEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ltpEditButtonActionPerformed
     // null check     
        if (!ltpAmount.getText().isEmpty()) {
            szerzOsszeg = Integer.parseInt(ltpAmount.getText());
        }
        if (!ltpTerm.getText().isEmpty()) {
            LtpFutamido = Integer.parseInt(ltpTerm.getText());
        }
        if (!ltpNumbers.getText().isEmpty()) {
            dBSzam = Integer.parseInt(ltpNumbers.getText());
        }
        if (!ltpStart.getText().isEmpty()) {
            ltpStartnull = LocalDate.parse(ltpStart.getText(), DateTimeFormatter.ISO_DATE);

        }
        if (!ltpEnd.getText().isEmpty()) {
            ltpEndnull = LocalDate.parse(ltpEnd.getText(), DateTimeFormatter.ISO_DATE);
        }
        // end null check         
        
        try {
            
             data.update(new Ltp(Integer.parseInt(ltpId.getText()), szerzOsszeg,
                     ltpStartnull, LtpFutamido, ltpEndnull, dBSzam, LtpiDLabel.getText()));
             // public Ltp(int ugyfelId, int szerzOsszeg, LocalDate ltpStart, int LtpFutamido, LocalDate ltpEnd, int dBSzam) {
        } catch (NumberFormatException | DateTimeException e) {
        }          
     
    }//GEN-LAST:event_ltpEditButtonActionPerformed

    private void ltpReadCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ltpReadCsvActionPerformed

        try {
       
          //  ReposExcel adatok = new DataExcel(JOptionPane.showInputDialog("Fálj neve: "));
                              ReposExcel adatok = new DataExcel(openChooseFile.fileChooser());   
            for (Ltp entries : adatok.findAllLtps()) {
                ltpId.setText("" + entries.getUgyfelId2());
                ltpAmount.setText("" + entries.getSzerzOsszeg2());
                ltpStart.setText("" + entries.getLtpStart2());
                ltpTerm.setText("" + entries.getLtpFutamido2());
                ltpEnd.setText("" + entries.getLtpEnd2());
                ltpNumbers.setText("" + entries.getdBSzam2());
            }
            

        } catch (IOException | IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(rootPane, "Nem található a fájl!");
        }
    }//GEN-LAST:event_ltpReadCsvActionPerformed

    private void ltpAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ltpAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ltpAmountActionPerformed

    private void ltpIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ltpIdActionPerformed

    }//GEN-LAST:event_ltpIdActionPerformed

    private void iDReadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iDReadButtonActionPerformed
        // TODO add your handling code here:
         int clientid = 0;
         try {
              try {
              clientid = Integer.parseInt(JOptionPane.showInputDialog("Id: "));
           
              Ltp lista = data.findbyIdLtp(clientid);
              ltpAmount.setText(""+lista.getSzerzOsszeg());
              ltpStart.setText(""+lista.getLtpStart2());
              ltpTerm.setText(""+lista.getLtpFutamido());
              ltpEnd.setText(""+lista.getLtpEnd2());
              ltpNumbers.setText(""+lista.getdBSzam2());
              ltpId.setText(""+lista.getUgyfelId2());
              LtpiDLabel.setText(""+lista.getUgyfelId());
              ltpId.setEditable(false);
         
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(rootPane, "Nincs ilyen Id!");
        }
            
        } catch (SQLException e) {
        }
           // regex check
             
        
           
    }//GEN-LAST:event_iDReadButtonActionPerformed

    private void ltpIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ltpIdKeyTyped
        // Id check
        
        String str = ltpId.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXONLYNUMBER, str)) {
            idCheck.setIcon(regex.getIconeOk());

        } else {
            idCheck.setIcon(regex.getIconeX());

        }
        
    }//GEN-LAST:event_ltpIdKeyTyped

    private void ltpAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ltpAmountKeyTyped
        // Amount check
          String str = ltpAmount.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXONLYNUMBER, str)) {
            ammountCheck.setIcon(regex.getIconeOk());

        } else {
            ammountCheck.setIcon(regex.getIconeX());

        }
    }//GEN-LAST:event_ltpAmountKeyTyped

    private void ltpStartKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ltpStartKeyTyped
        // start check
          String str = ltpStart.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXDATE, str)) {
            startCheck.setIcon(regex.getIconeOk());

        } else {
            startCheck.setIcon(regex.getIconeX());

        }
    }//GEN-LAST:event_ltpStartKeyTyped

    private void ltpTermKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ltpTermKeyTyped
        // Term check
              String str = ltpTerm.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXONLYNUMBER, str)) {
            termCheck.setIcon(regex.getIconeOk());

        } else {
            termCheck.setIcon(regex.getIconeX());

        }
        
    }//GEN-LAST:event_ltpTermKeyTyped

    private void ltpEndKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ltpEndKeyTyped
        // endCheck
        String str = ltpEnd.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXDATE, str)) {
            endCheck.setIcon(regex.getIconeOk());

        } else {
            endCheck.setIcon(regex.getIconeX());

        }
    }//GEN-LAST:event_ltpEndKeyTyped

    private void ltpNumbersKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ltpNumbersKeyTyped
        // numberCheck
               String str = ltpNumbers.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXONLYNUMBER, str)) {
            numberCheck.setIcon(regex.getIconeOk());

        } else {
            numberCheck.setIcon(regex.getIconeX());

        }
    }//GEN-LAST:event_ltpNumbersKeyTyped

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // 
       try {
               ReposDataBase insert = new dataBaseSql();
        clientid = Integer.parseInt(JOptionPane.showInputDialog("Kérem adja meg melyik Id-t töröljük: "));
          insert.LtpDelete(clientid);
               try {
            
              Ltp lista = data.findbyIdLtp(clientid);
               ltpId.setText(""+lista.getUgyfelId2());
             
         
        } catch (NullPointerException e) {
             JOptionPane.showMessageDialog(rootPane, "Törölve!");
        }
          
        } catch (SQLException | NumberFormatException e) {
            System.out.println("delete: "+e.getMessage());
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LtpAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LtpAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LtpAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LtpAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LtpAdd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LtpiDLabel;
    private javax.swing.JLabel ammountCheck;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel endCheck;
    private javax.swing.JButton iDReadButton;
    private javax.swing.JLabel idCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton lptTermCalculate;
    private javax.swing.JTextField ltpAmount;
    private javax.swing.JButton ltpEditButton;
    private javax.swing.JTextField ltpEnd;
    private javax.swing.JTextField ltpId;
    private javax.swing.JTextField ltpNumbers;
    private javax.swing.JButton ltpReadCsv;
    private javax.swing.JButton ltpSaveButton;
    private javax.swing.JTextField ltpStart;
    private javax.swing.JTextField ltpTerm;
    private javax.swing.JLabel numberCheck;
    private javax.swing.JLabel startCheck;
    private javax.swing.JLabel termCheck;
    // End of variables declaration//GEN-END:variables
}
