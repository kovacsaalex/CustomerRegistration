package client;

import database.dataBaseSql;
import fileChooser.FileChooser;
import readExcel.DataExcel;
import regex.RegexSample;
import repository.ReposDataBase;
import repository.ReposExcel;

import javax.swing.*;
import java.io.IOException;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/**
 *
 * @author ali
 */
public class ClientAdd extends javax.swing.JFrame {

    DateTimeFormatter dtf = DateTimeFormatter.ISO_DATE;

    FileChooser openChooseFile = new FileChooser();
    RegexSample regex = new RegexSample();


   
   
    private final  ImageIcon iconeOk = regex.getIconeOk();
    private final  ImageIcon iconeX = regex.getIconeX();
    
    /**
     * Creates new form ugyfelfelvitele
     */
    public ClientAdd() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        uVezetekNev = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        uKeresztNev = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        uSzulIdo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        uLeanyNev = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        uSzulHely = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        uAnyjaNeve = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        uCim = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        UIrSzam = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        uVaros = new javax.swing.JTextField();
        uSaveButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        uSzemSzam = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        uAdoJel = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        USzigSzam = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        ULakcimSzam = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        uLakikIdo = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        uTajSzam = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        UCsalAllapot = new java.awt.Checkbox();
        jLabel18 = new javax.swing.JLabel();
        uEmail = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        uReadCsv = new javax.swing.JButton();
        Utel = new javax.swing.JTextField();
        ClientIdReadButton = new javax.swing.JButton();
        vNevRegex = new javax.swing.JLabel();
        kNevRegex = new javax.swing.JLabel();
        lNevRegex = new javax.swing.JLabel();
        szulHelyRegex = new javax.swing.JLabel();
        szulIdoRegex = new javax.swing.JLabel();
        irSzamRegex = new javax.swing.JLabel();
        anyuNevRegex = new javax.swing.JLabel();
        varosRegex = new javax.swing.JLabel();
        szemelyiRegex = new javax.swing.JLabel();
        adoRegex = new javax.swing.JLabel();
        szigRegex = new javax.swing.JLabel();
        lakCimRegex = new javax.swing.JLabel();
        miotaRegex = new javax.swing.JLabel();
        tajRegex = new javax.swing.JLabel();
        telRegex = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        emailRegex = new javax.swing.JLabel();
        ClientEditButton = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        clientIdLabel = new javax.swing.JLabel();
        SaveToLoan = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ügyfél");
        setBackground(new java.awt.Color(150, 150, 150));

        jLabel1.setText("Vezetéknév :");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("Ügyfél rögzítése vagy módosítása a megadott adatok szerint :");

        uVezetekNev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uVezetekNevActionPerformed(evt);
            }
        });
        uVezetekNev.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uVezetekNevKeyTyped(evt);
            }
        });

        jLabel3.setText("Keresztnév :");

        uKeresztNev.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uKeresztNevKeyTyped(evt);
            }
        });

        jLabel4.setText("Születési hely :");

        uSzulIdo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uSzulIdoKeyTyped(evt);
            }
        });

        jLabel5.setText("Leánykori Neve :");

        uLeanyNev.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uLeanyNevKeyTyped(evt);
            }
        });

        jLabel6.setText("Születési Idő :");

        uSzulHely.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uSzulHelyKeyTyped(evt);
            }
        });

        jLabel7.setText("Anyja Neve :");

        uAnyjaNeve.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uAnyjaNeveKeyTyped(evt);
            }
        });

        jLabel8.setText("Lakcím (utca, házszám, emelet, ajtó) :");

        uCim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uCimKeyTyped(evt);
            }
        });

        jLabel9.setText("Irányítószám :");

        UIrSzam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                UIrSzamKeyTyped(evt);
            }
        });

        jLabel10.setText("Város :");

        uVaros.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uVarosKeyTyped(evt);
            }
        });

        uSaveButton.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        uSaveButton.setText("Ment új ügyfélként");
        uSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uSaveButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("Szemelyi Szam :");

        uSzemSzam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uSzemSzamKeyTyped(evt);
            }
        });

        jLabel12.setText("Adóazonosító Jel :");

        uAdoJel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uAdoJelKeyTyped(evt);
            }
        });

        jLabel13.setText("Személyi igazolvány száma :");

        USzigSzam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                USzigSzamKeyTyped(evt);
            }
        });

        jLabel14.setText("Lakcímkártya száma :");

        ULakcimSzam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ULakcimSzamKeyTyped(evt);
            }
        });

        jLabel15.setText("Mióta lakik jelenlegi lakcímén :");

        uLakikIdo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uLakikIdoKeyTyped(evt);
            }
        });

        jLabel16.setText("TAJ azonosító :");

        uTajSzam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uTajSzamKeyTyped(evt);
            }
        });

        jLabel17.setText("Családi állapot :");

        UCsalAllapot.setLabel("Házas");

        jLabel18.setText("Email :");

        uEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uEmailKeyTyped(evt);
            }
        });

        jLabel19.setText("Telefonszám :");

        uReadCsv.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        uReadCsv.setText("Beolvasás Fájlból");
        uReadCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uReadCsvActionPerformed(evt);
            }
        });

        Utel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                UtelKeyTyped(evt);
            }
        });

        ClientIdReadButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        ClientIdReadButton.setText("Id beolvasása");
        ClientIdReadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientIdReadButtonActionPerformed(evt);
            }
        });

        varosRegex.setText(" ");

        ClientEditButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        ClientEditButton.setText("Módosítás");
        ClientEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientEditButtonActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel20.setText("Id: ");

        SaveToLoan.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        SaveToLoan.setText("Ment hitelhez");
        SaveToLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveToLoanActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        deleteButton.setText("Törlés");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(uVezetekNev, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(uKeresztNev, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(uLeanyNev, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(uSzulIdo, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(uAnyjaNeve, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(uCim, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(UIrSzam, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(uVaros, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(uSzemSzam, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(uAdoJel, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(USzigSzam, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(ULakcimSzam, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(uLakikIdo, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(uTajSzam, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(uEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(Utel, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(UCsalAllapot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uSzulHely))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(vNevRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(kNevRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lNevRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(szulHelyRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(szulIdoRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(irSzamRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(anyuNevRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(varosRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(szemelyiRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adoRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(szigRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lakCimRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(miotaRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tajRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(telRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emailRegex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clientIdLabel)
                        .addGap(62, 62, 62))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(129, 129, 129))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(uSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SaveToLoan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uReadCsv, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ClientIdReadButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClientEditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addContainerGap(115, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(uVezetekNev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vNevRegex)
                    .addComponent(jLabel20)
                    .addComponent(clientIdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(uKeresztNev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kNevRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uLeanyNev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(lNevRegex))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(uSzulHely, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(szulHelyRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(uSzulIdo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(szulIdoRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uAnyjaNeve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anyuNevRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uCim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UIrSzam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(irSzamRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(uVaros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(varosRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(uSzemSzam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(szemelyiRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(uAdoJel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adoRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(USzigSzam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(szigRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(ULakcimSzam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lakCimRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(uLakikIdo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(miotaRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(uTajSzam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tajRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(uEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(Utel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telRegex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UCsalAllapot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uSaveButton)
                    .addComponent(uReadCsv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ClientIdReadButton)
                    .addComponent(ClientEditButton)
                    .addComponent(SaveToLoan)
                    .addComponent(deleteButton))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uSaveButtonActionPerformed

        if (regex.getId() == 0) {

            try {

                String vNev = uVezetekNev.getText().trim();
                String kNev = uKeresztNev.getText().trim();
                boolean hazas = UCsalAllapot.getState();

                LocalDate szetesIdo = null;
                if (uSzulIdo.getText().isEmpty()) {
                    szetesIdo = LocalDate.of(00, 01, 01);
                } else {
                    try {
                        szetesIdo = LocalDate.parse(uSzulIdo.getText(), dtf);
                    } catch (DateTimeParseException ex) {
                        JOptionPane.showMessageDialog(rootPane, "Dátum formátum nem megfelelő (ÉÉÉÉ-HH-NN) !");
                    }
                }
                int irszam = 0;
                if (!UIrSzam.getText().isEmpty()) {
                    irszam = Integer.parseInt(UIrSzam.getText());
                }

                if (!vNev.isEmpty() && !kNev.isEmpty()) {

                    ReposDataBase insert = new dataBaseSql();

                    insert.insertClient(new Client(uEmail.getText().trim(), uVezetekNev.getText().trim(), uKeresztNev.getText().trim(),
                            uLeanyNev.getText().trim(), uSzulHely.getText().trim(), szetesIdo,
                            uAnyjaNeve.getText().trim(), uSzemSzam.getText().trim(), uAdoJel.getText().trim(),
                            uTajSzam.getText().trim(), irszam, uVaros.getText().trim(),
                            uCim.getText(), uLakikIdo.getText().trim(), USzigSzam.getText(),
                            ULakcimSzam.getText().trim(), hazas, Utel.getText().trim()));

                    JOptionPane.showMessageDialog(rootPane, "A ügyfél sorszáma: " + insert.sqlIdCount(), "",
                            JOptionPane.INFORMATION_MESSAGE);
                    clientIdLabel.setText(insert.sqlIdCount() + "");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "A vezetéknév és a keresztnév nem lehet üres",
                            "Hiba!", JOptionPane.INFORMATION_MESSAGE);
                }

            } catch (SQLException | NullPointerException e) {
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Hiba a beírt adatokban!");
        }
    }//GEN-LAST:event_uSaveButtonActionPerformed

    private void uReadCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uReadCsvActionPerformed
        try {
            ReposExcel adatok = new DataExcel(openChooseFile.fileChooser());

            for (Client clientExcels : adatok.findAllClients()) {
                uVezetekNev.setText("" + clientExcels.getVezetekNev());
                uKeresztNev.setText("" + clientExcels.getKeresztNevek());
                uLeanyNev.setText("" + clientExcels.getLeanyKoriNev());
                uSzulHely.setText("" + clientExcels.getSzulHely());
                uSzulIdo.setText("" + clientExcels.getSzulIdo());
                uAnyjaNeve.setText("" + clientExcels.getAnyuNeve());
                uCim.setText("" + clientExcels.getLakCim());
                UIrSzam.setText("" + clientExcels.getIranyitoSzam());
                uVaros.setText("" + clientExcels.getVaros());
                uSzemSzam.setText("" + clientExcels.getSzemelyiSzam());
                uAdoJel.setText("" + clientExcels.getAdoAzonosito());
                USzigSzam.setText("" + clientExcels.getSzIgSzam());
                ULakcimSzam.setText("" + clientExcels.getLakCimSzam());
                uLakikIdo.setText("" + clientExcels.getLakhelyido());
                uTajSzam.setText("" + clientExcels.getTajSzam());
                uEmail.setText("" + clientExcels.getEmail());
                Utel.setText("" + clientExcels.getTelSzam());
            }

        } catch (IOException | IndexOutOfBoundsException e) {
            System.out.println("e " + e.getMessage());
            JOptionPane.showMessageDialog(rootPane, "Nem található a fájl!");
        }
        // regex check
        vNevRegex.setIcon(regex.check(regex.REGEXNAME, uVezetekNev.getText()));
        kNevRegex.setIcon(regex.check(regex.REGEXNAME, uKeresztNev.getText()));
        lNevRegex.setIcon(regex.check(regex.REGEXNAME, uLeanyNev.getText()));
        szulHelyRegex.setIcon(regex.check(regex.REGEXNAME, uSzulHely.getText()));
        szulIdoRegex.setIcon(regex.check(regex.REGEXNAME, uSzulIdo.getText()));
        anyuNevRegex.setIcon(regex.check(regex.REGEXNAME, uAnyjaNeve.getText()));
        lakCimRegex.setIcon(iconeOk);
        irSzamRegex.setIcon(regex.check(regex.REGEXPOSTALCODE, UIrSzam.getText()));
        varosRegex.setIcon(regex.check(regex.REGEXNAME, uVaros.getText()));
        szemelyiRegex.setIcon(regex.check(regex.REGEXPID, uSzemSzam.getText()));
        adoRegex.setIcon(regex.check(regex.REGEXTAXNUMBER, uAdoJel.getText()));
        szigRegex.setIcon(regex.check(regex.REGEXCARD, USzigSzam.getText()));
        lakCimRegex.setIcon(regex.check(regex.REGEXCARD, ULakcimSzam.getText()));
        if (!uLakikIdo.getText().isEmpty()) {
            miotaRegex.setIcon(iconeOk);
        } else {
            miotaRegex.setIcon(iconeX);
        }
        tajRegex.setIcon(regex.check(regex.REGEXTAJ, uTajSzam.getText()));
        emailRegex.setIcon(regex.check(regex.REGEXEMAIL, uEmail.getText()));
        telRegex.setIcon(regex.check(regex.REGEXTEL, Utel.getText()));

    }//GEN-LAST:event_uReadCsvActionPerformed

    private void uEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uEmailKeyTyped
        // email check
        String Exp = "[\\w\\.]+@\\w+\\.[A-Za-z\\.]{2,5}";
        String str = uEmail.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;

        }

        if (regex.StrCheck(Exp, str)) {
            emailRegex.setIcon(iconeOk);

        } else {
            emailRegex.setIcon(iconeX);
        }
    }//GEN-LAST:event_uEmailKeyTyped

    private void uVezetekNevKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uVezetekNevKeyTyped
        // vezetéknév check
        String str = uVezetekNev.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }

        if (regex.StrCheck(regex.REGEXNAME, str)) {
            vNevRegex.setIcon(iconeOk);

        } else {
            vNevRegex.setIcon(iconeX);
        }

    }//GEN-LAST:event_uVezetekNevKeyTyped

    private void uKeresztNevKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uKeresztNevKeyTyped
        // keresztnév check
        String str = uKeresztNev.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }

        if (regex.StrCheck(regex.REGEXNAME, str)) {
            kNevRegex.setIcon(iconeOk);

        } else {
            kNevRegex.setIcon(iconeX);
        }
    }//GEN-LAST:event_uKeresztNevKeyTyped

    private void uLeanyNevKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uLeanyNevKeyTyped
        // leánykori név check
        String str = uLeanyNev.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }

        if (regex.StrCheck(regex.REGEXNAME, str)) {
            lNevRegex.setIcon(iconeOk);

        } else {
            lNevRegex.setIcon(iconeX);
        }
    }//GEN-LAST:event_uLeanyNevKeyTyped

    private void uSzulHelyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uSzulHelyKeyTyped
        // születési hely check
        String str = uSzulHely.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXNAME, str)) {
            szulHelyRegex.setIcon(iconeOk);

        } else {
            szulHelyRegex.setIcon(iconeX);
        }
    }//GEN-LAST:event_uSzulHelyKeyTyped

    private void uSzulIdoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uSzulIdoKeyTyped

        String str = uSzulIdo.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXDATE, str)) {
            szulIdoRegex.setIcon(iconeOk);

        } else {
            szulIdoRegex.setIcon(iconeX);
        }

    }//GEN-LAST:event_uSzulIdoKeyTyped

    private void uAnyjaNeveKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uAnyjaNeveKeyTyped
        // Anyja neve check
        String str = uAnyjaNeve.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXNAME, str)) {
            anyuNevRegex.setIcon(iconeOk);

        } else {
            anyuNevRegex.setIcon(iconeX);
        }
    }//GEN-LAST:event_uAnyjaNeveKeyTyped

    private void uCimKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uCimKeyTyped
        //
        if (!uCim.getText().isEmpty()) {
            jLabel36.setIcon(iconeOk);
        } else {
            jLabel36.setIcon(iconeX);
        }
    }//GEN-LAST:event_uCimKeyTyped

    private void UIrSzamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UIrSzamKeyTyped
        // Irányítószám ellenőrzés
        String str = UIrSzam.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXPOSTALCODE, str)) {
            irSzamRegex.setIcon(iconeOk);

        } else {
            irSzamRegex.setIcon(iconeX);

        }

    }//GEN-LAST:event_UIrSzamKeyTyped

    private void uVarosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uVarosKeyTyped
        // Város check
        String str = uVaros.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXNAME, str)) {
            varosRegex.setIcon(iconeOk);

        } else {
            varosRegex.setIcon(iconeX);
            System.out.println("Icon: " + varosRegex.getText());

        }

    }//GEN-LAST:event_uVarosKeyTyped

    private void uSzemSzamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uSzemSzamKeyTyped
        // Személyi szám check
        String str = uSzemSzam.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXPID, str)) {
            szemelyiRegex.setIcon(iconeOk);

        } else {
            szemelyiRegex.setIcon(iconeX);

        }

    }//GEN-LAST:event_uSzemSzamKeyTyped

    private void uAdoJelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uAdoJelKeyTyped
        // Adószám check
        String str = uAdoJel.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXTAXNUMBER, str)) {
            adoRegex.setIcon(iconeOk);

        } else {
            adoRegex.setIcon(iconeX);

        }
    }//GEN-LAST:event_uAdoJelKeyTyped

    private void USzigSzamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_USzigSzamKeyTyped
        // Szigszám check
        String str = USzigSzam.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXCARD, str)) {
            szigRegex.setIcon(iconeOk);

        } else {
            szigRegex.setIcon(iconeX);

        }
    }//GEN-LAST:event_USzigSzamKeyTyped

    private void ULakcimSzamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ULakcimSzamKeyTyped
        // lakcím kártya check
        String str = ULakcimSzam.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXCARD, str)) {
            lakCimRegex.setIcon(iconeOk);

        } else {
            lakCimRegex.setIcon(iconeX);

        }
    }//GEN-LAST:event_ULakcimSzamKeyTyped

    private void uLakikIdoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uLakikIdoKeyTyped
        // Tlakcím idő check
        if (!uLakikIdo.getText().isEmpty()) {
            miotaRegex.setIcon(iconeOk);
        } else {
            miotaRegex.setIcon(iconeX);
        }
    }//GEN-LAST:event_uLakikIdoKeyTyped

    private void uTajSzamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uTajSzamKeyTyped
        // TAJ check
        String str = uTajSzam.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;
        }
        if (regex.StrCheck(regex.REGEXTAJ, str)) {
            tajRegex.setIcon(iconeOk);

        } else {
            tajRegex.setIcon(iconeX);
        }

    }//GEN-LAST:event_uTajSzamKeyTyped

    private void UtelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UtelKeyTyped
        // Telefonszam check
        String str = Utel.getText();
        char Ch = evt.getKeyChar();
        if (Ch >= 33 && Ch <= 126) {
            str += Ch;

        }
        if (regex.StrCheck(regex.REGEXTEL, str)) {
            telRegex.setIcon(iconeOk);

        } else {
            telRegex.setIcon(iconeX);

        }
        if (regex.StrCheck(regex.REGEXTEL, str)) {
            String phoneNumber = Utel.getText();
            StringBuilder sb = new StringBuilder(phoneNumber)
                    .insert(0, "+36 ")
                    .insert(4, " (")
                    .insert(8, ") ")
                    .insert(13, "-")
                    .insert(16, "-");
            String output = sb.toString();
            Utel.setText(output);
        }
    }//GEN-LAST:event_UtelKeyTyped

    private void ClientIdReadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientIdReadButtonActionPerformed
        // beolvasás módosításhoz
        int clientid = 0;
        try {
            clientid = Integer.parseInt(JOptionPane.showInputDialog("Id: "));

            try {
                ReposDataBase adatok = new dataBaseSql();
                Client lista = adatok.findbyIdClients(clientid);
                uVezetekNev.setText("" + lista.getVezetekNev());
                uKeresztNev.setText("" + lista.getKeresztNevek());
                uLeanyNev.setText("" + lista.getLeanyKoriNev());
                uSzulHely.setText("" + lista.getSzulHely());
                uSzulIdo.setText("" + lista.getSzulIdo());
                uAnyjaNeve.setText("" + lista.getAnyuNeve());
                uCim.setText("" + lista.getLakCim());
                UIrSzam.setText("" + lista.getIranyitoSzam());
                uVaros.setText("" + lista.getVaros());
                uSzemSzam.setText("" + lista.getSzemelyiSzam());
                uAdoJel.setText("" + lista.getAdoAzonosito());
                USzigSzam.setText("" + lista.getSzIgSzam());
                ULakcimSzam.setText("" + lista.getLakCimSzam());
                uLakikIdo.setText("" + lista.getLakhelyido());
                uTajSzam.setText("" + lista.getTajSzam());
                uEmail.setText("" + lista.getEmail());
                Utel.setText("" + lista.getTelSzam());
                clientIdLabel.setText("" + lista.getId());

            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(rootPane, "Nincs ilyen Id!");
            }

        } catch (SQLException e) {
        }
    }//GEN-LAST:event_ClientIdReadButtonActionPerformed

    private void ClientEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientEditButtonActionPerformed
        // TODO add your handling code here:
        if (clientIdLabel.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Nincs megadva az ügyfél Id sorszáma! ", "",
                    JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {

                String vNev = uVezetekNev.getText().trim();
                String kNev = uKeresztNev.getText().trim();
                boolean hazas = UCsalAllapot.getState();
                int clientid = Integer.parseInt(clientIdLabel.getText());
                LocalDate szetesIdo = null;
                if (uSzulIdo.getText().isEmpty()) {
                    szetesIdo = LocalDate.of(00, 01, 01);
                } else {
                    try {
                        szetesIdo = LocalDate.parse(uSzulIdo.getText(), dtf);
                    } catch (DateTimeParseException ex) {
                        JOptionPane.showMessageDialog(rootPane, "Dátum formátum nem megfelelő (ÉÉÉÉ-HH-NN) !");
                    }
                }

                int irszam = 0;
                if (!UIrSzam.getText().isEmpty()) {
                    irszam = Integer.parseInt(UIrSzam.getText());
                }

                if (!vNev.isEmpty() && !kNev.isEmpty()) {

                    ReposDataBase insert = new dataBaseSql();

                    insert.update(new Client(clientid, uEmail.getText().trim(), uVezetekNev.getText().trim(), uKeresztNev.getText().trim(),
                            uLeanyNev.getText().trim(), uSzulHely.getText().trim(), szetesIdo,
                            uAnyjaNeve.getText().trim(), uSzemSzam.getText().trim(), uAdoJel.getText().trim(),
                            uTajSzam.getText().trim(), irszam, uVaros.getText().trim(),
                            uCim.getText(), uLakikIdo.getText().trim(), USzigSzam.getText(),
                            ULakcimSzam.getText().trim(), hazas, Utel.getText().trim()));

                    //    JOptionPane.showMessageDialog(rootPane, "A ügyfél sorszáma: " + insert.sqlIdCount(), "",
                    //          JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "A vezetéknév és a keresztnév nem lehet üres",
                            "Hiba!", JOptionPane.INFORMATION_MESSAGE);
                }

            } catch (NullPointerException | NumberFormatException | SQLException e) {
                System.out.println("ez:" + e.getMessage());
            }
        }

    }//GEN-LAST:event_ClientEditButtonActionPerformed

    private void uVezetekNevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uVezetekNevActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uVezetekNevActionPerformed

    private void SaveToLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveToLoanActionPerformed
        // SAVE TO LOAN
        int clToLoanId = 0;

        clToLoanId = Integer.parseInt(JOptionPane.showInputDialog("Id: "));

        try {

            String vNev = uVezetekNev.getText().trim();
            String kNev = uKeresztNev.getText().trim();
            boolean hazas = UCsalAllapot.getState();

            LocalDate szetesIdo = null;
            if (uSzulIdo.getText().isEmpty()) {
                szetesIdo = LocalDate.of(00, 01, 01);
            } else {
                try {
                    szetesIdo = LocalDate.parse(uSzulIdo.getText(), dtf);
                } catch (DateTimeParseException ex) {
                    JOptionPane.showMessageDialog(rootPane, "Dátum formátum nem megfelelő (ÉÉÉÉ-HH-NN) !");
                }
            }
            int irszam = 0;
            if (!UIrSzam.getText().isEmpty()) {
                irszam = Integer.parseInt(UIrSzam.getText());
            }

            if (!vNev.isEmpty() && !kNev.isEmpty()) {

                ReposDataBase insert = new dataBaseSql();

                insert.insertClientToLoan(new Client(clToLoanId, uEmail.getText().trim(), uVezetekNev.getText().trim(), uKeresztNev.getText().trim(),
                        uLeanyNev.getText().trim(), uSzulHely.getText().trim(), szetesIdo,
                        uAnyjaNeve.getText().trim(), uSzemSzam.getText().trim(), uAdoJel.getText().trim(),
                        uTajSzam.getText().trim(), irszam, uVaros.getText().trim(),
                        uCim.getText(), uLakikIdo.getText().trim(), USzigSzam.getText(),
                        ULakcimSzam.getText().trim(), hazas, Utel.getText().trim()));

                JOptionPane.showMessageDialog(rootPane, "A ügyfél sorszáma: " + insert.sqlIdCount(), "",
                        JOptionPane.INFORMATION_MESSAGE);
                clientIdLabel.setText(insert.sqlIdCount() + "");

            } else {
                JOptionPane.showMessageDialog(rootPane, "A vezetéknév és a keresztnév nem lehet üres",
                        "Hiba!", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (SQLException | NullPointerException e) {
        }


    }//GEN-LAST:event_SaveToLoanActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int clientid = 0;

        try {
            ReposDataBase insert = new dataBaseSql();
            clientid = Integer.parseInt(JOptionPane.showInputDialog("Kérem adja meg melyik Id-t töröljük: "));
            insert.ClientDelete(clientid);
            try {
                ReposDataBase adatok = new dataBaseSql();
                Client lista = adatok.findbyIdClients(clientid);
                uVezetekNev.setText("" + lista.getVezetekNev());

            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(rootPane, "Törölve!");
            }

        } catch (SQLException | NumberFormatException e) {
            System.out.println("delete: " + e.getMessage());
        }


    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientAdd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClientEditButton;
    private javax.swing.JButton ClientIdReadButton;
    private javax.swing.JButton SaveToLoan;
    private java.awt.Checkbox UCsalAllapot;
    private javax.swing.JTextField UIrSzam;
    private javax.swing.JTextField ULakcimSzam;
    private javax.swing.JTextField USzigSzam;
    private javax.swing.JTextField Utel;
    private javax.swing.JLabel adoRegex;
    private javax.swing.JLabel anyuNevRegex;
    private javax.swing.JLabel clientIdLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel emailRegex;
    private javax.swing.JLabel irSzamRegex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel kNevRegex;
    private javax.swing.JLabel lNevRegex;
    private javax.swing.JLabel lakCimRegex;
    private javax.swing.JLabel miotaRegex;
    private javax.swing.JLabel szemelyiRegex;
    private javax.swing.JLabel szigRegex;
    private javax.swing.JLabel szulHelyRegex;
    private javax.swing.JLabel szulIdoRegex;
    private javax.swing.JLabel tajRegex;
    private javax.swing.JLabel telRegex;
    private javax.swing.JTextField uAdoJel;
    private javax.swing.JTextField uAnyjaNeve;
    private javax.swing.JTextField uCim;
    private javax.swing.JTextField uEmail;
    private javax.swing.JTextField uKeresztNev;
    private javax.swing.JTextField uLakikIdo;
    private javax.swing.JTextField uLeanyNev;
    private javax.swing.JButton uReadCsv;
    private javax.swing.JButton uSaveButton;
    private javax.swing.JTextField uSzemSzam;
    private javax.swing.JTextField uSzulHely;
    private javax.swing.JTextField uSzulIdo;
    private javax.swing.JTextField uTajSzam;
    private javax.swing.JTextField uVaros;
    private javax.swing.JTextField uVezetekNev;
    private javax.swing.JLabel vNevRegex;
    private javax.swing.JLabel varosRegex;
    // End of variables declaration//GEN-END:variables

}
