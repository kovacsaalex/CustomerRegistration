package lists;

import java.util.ArrayList;
import client.Client;
import database.dataBaseSql;
import java.sql.SQLException;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import ltp.Ltp;
import repository.ReposDataBase;

/**
 *
 * @author alexkovacs
 */
public class LtpLists extends javax.swing.JFrame {

    private ReposDataBase adatok = new dataBaseSql();
    private List<Ltp> ltpList = new ArrayList<>();
    private List<Client> clientList = new ArrayList<>();

    /**
     * Creates new form Lists
     */
    public LtpLists() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ListaButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        SqlTable = new javax.swing.JTable();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("LTP Lista");

        ListaButton.setText("Minden LTP listázása");
        ListaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListaButtonActionPerformed(evt);
            }
        });

        SqlTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Vezetéknév", "Keresztnév", "Havi összeg", "Kezdete", "Futamidő", "Lejárat", "Db", "Client Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        SqlTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(SqlTable);
        if (SqlTable.getColumnModel().getColumnCount() > 0) {
            SqlTable.getColumnModel().getColumn(4).setMinWidth(50);
            SqlTable.getColumnModel().getColumn(6).setMinWidth(50);
        }

        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });

        searchButton.setText("Keres");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Keresés az LTP listában :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 974, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ListaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)
                    .addComponent(ListaButton)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ListaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListaButtonActionPerformed
        try {

            ltpList = adatok.findAllLtp();

            DefaultTableModel model = (DefaultTableModel) SqlTable.getModel();
            model.setRowCount(0);

            Object[] row = new Object[9];

            for (int i = 0; i < ltpList.size(); i++) {
                Client nevek = adatok.findbyIdClients(Integer.parseInt(ltpList.get(i).getUgyfelId2()));
                row[0] = ltpList.get(i).getUgyfelId();
                row[1] = nevek.getKeresztNevek();
                row[2] = nevek.getVezetekNev();
                row[3] = ltpList.get(i).getSzerzOsszeg();
                row[4] = ltpList.get(i).getLtpStart2();
                row[5] = ltpList.get(i).getLtpFutamido();
                row[6] = ltpList.get(i).getLtpEnd2();
                row[7] = ltpList.get(i).getdBSzam2();
                row[8] = " " + ltpList.get(i).getUgyfelId2();

                model.addRow(row);
            }

        } catch (SQLException | IndexOutOfBoundsException | NumberFormatException e) {
            System.out.println(e.getMessage());
        }


    }//GEN-LAST:event_ListaButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        try {
            ltpList = adatok.searchFromLtp(searchField.getText());
            clientList = adatok.searchFromClients(searchField.getText());
            DefaultTableModel model = (DefaultTableModel) SqlTable.getModel();
            model.setRowCount(0);
            Object[] row = new Object[9];
            for (int i = 0; i < ltpList.size(); i++) {
                row[0] = ltpList.get(i).getUgyfelId();
                row[1] = clientList.get(i).getKeresztNevek();
                row[2] = clientList.get(i).getVezetekNev();
                row[3] = ltpList.get(i).getSzerzOsszeg();
                row[4] = ltpList.get(i).getLtpStart2();
                row[5] = ltpList.get(i).getLtpFutamido();
                row[6] = ltpList.get(i).getLtpEnd2();
                row[7] = ltpList.get(i).getdBSzam2();
                row[8] = ltpList.get(i).getUgyfelId2();
                model.addRow(row);
            }
        } catch (SQLException | IndexOutOfBoundsException e) {
        }


    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // TODO add your handling code here:
        try {
            ltpList = adatok.searchFromLtp(searchField.getText());
            clientList = adatok.searchFromClients(searchField.getText());
            DefaultTableModel model = (DefaultTableModel) SqlTable.getModel();
            model.setRowCount(0);
            Object[] row = new Object[9];
            for (int i = 0; i < ltpList.size(); i++) {

                row[0] = ltpList.get(i).getUgyfelId();
                row[1] = clientList.get(i).getKeresztNevek();
                row[2] = clientList.get(i).getVezetekNev();
                row[3] = ltpList.get(i).getSzerzOsszeg();
                row[4] = ltpList.get(i).getLtpStart2();
                row[5] = ltpList.get(i).getLtpFutamido();
                row[6] = ltpList.get(i).getLtpEnd2();
                row[7] = ltpList.get(i).getdBSzam2();
                row[8] = ltpList.get(i).getUgyfelId2();
                model.addRow(row);
            }
        } catch (SQLException | IndexOutOfBoundsException e) {
        }

    }//GEN-LAST:event_searchFieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LtpLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LtpLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LtpLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LtpLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LtpLists().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ListaButton;
    private javax.swing.JTable SqlTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables
}
