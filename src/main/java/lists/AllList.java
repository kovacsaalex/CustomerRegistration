
package lists;

import java.util.ArrayList;
import database.dataBaseSql;
import java.sql.SQLException;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import repository.ReposDataBase;

/**
 *
 * @author alexkovacs
 */
public class AllList extends javax.swing.JFrame {
    private ReposDataBase adatok = new dataBaseSql();
   
   private List<AllKindList> allKindList = new ArrayList<>();
    
    /**
     * Creates new form Lists
     */
    public AllList() {
        initComponents();
   
    }   
     /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ClientListaButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ClientSqlTable = new javax.swing.JTable();
        ClientsearchField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        LCButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ügyfél Lista");

        ClientListaButton.setText("Összevont lista (Ügyfél,Hitel,Megtakarítás)");
        ClientListaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientListaButtonActionPerformed(evt);
            }
        });

        ClientSqlTable.setAutoCreateRowSorter(true);
        ClientSqlTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ügyfél Id", "Hitel Id", "Ltp Id", "Vezetéknév", "Keresztnév", "Hitel összege", "Megtakarítás összege", "Hitel kezdete", "Hitel lejárata", "Ltp kezdete", "Ltp lejárata"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false, false, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ClientSqlTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(ClientSqlTable);
        if (ClientSqlTable.getColumnModel().getColumnCount() > 0) {
            ClientSqlTable.getColumnModel().getColumn(3).setMinWidth(100);
            ClientSqlTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            ClientSqlTable.getColumnModel().getColumn(4).setMinWidth(100);
            ClientSqlTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        ClientsearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ClientsearchFieldKeyReleased(evt);
            }
        });

        jLabel1.setText("Keresés a listában");

        LCButton.setText("Összevont lista (Ügyfél, Hitel)");
        LCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LCButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ClientListaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LCButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(45, 45, 45)
                        .addComponent(ClientsearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(196, 196, 196))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClientsearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientListaButton)
                    .addComponent(jLabel1)
                    .addComponent(LCButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClientListaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientListaButtonActionPerformed
        
        try {
          
           
           allKindList = adatok.allKindList();                 
           DefaultTableModel model = (DefaultTableModel)ClientSqlTable.getModel();
              model.setRowCount(0);
            
            Object [] row = new Object[11];
         
            for (int i = 0; i < allKindList.size(); i++) {
               
                row[0] = allKindList.get(i).getUgyfelId();
                 row[1] =  allKindList.get(i).getLoanId();
                  row[2] =  allKindList.get(i).getLtpId();
                  row[3] = allKindList.get(i).getVezetekNev();
                  row[4] = allKindList.get(i).getKeresztNevek();                  
                   row[5] = allKindList.get(i).getHitelOsszeg();
                    row[6] = allKindList.get(i).getHiteStart();
                    row[7] = allKindList.get(i).getHiteEnd();
                    row[8] = allKindList.get(i).getLtpOsszeg();
                    row[9] = allKindList.get(i).getLtpStart();
                    row[10] = allKindList.get(i).getLtpEnd();                  
                    
              
                       model.addRow(row);
            }
               
        } catch (SQLException | IndexOutOfBoundsException | NumberFormatException e) {
            System.out.println(e.getMessage());
        }
   
      
           
    }//GEN-LAST:event_ClientListaButtonActionPerformed

    private void ClientsearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClientsearchFieldKeyReleased
        // TODO add your handling code here:
    
        try {
            allKindList = adatok.searhFromAllKindLists(ClientsearchField.getText());
        
            
               DefaultTableModel model = (DefaultTableModel)ClientSqlTable.getModel();
             model.setRowCount(0);
           Object [] row = new Object[11];
         
            for (int i = 0; i < allKindList.size(); i++) {
               
                row[0] = allKindList.get(i).getUgyfelId();
                 row[1] =  allKindList.get(i).getLoanId();
                  row[2] =  allKindList.get(i).getLtpId();
                  row[3] = allKindList.get(i).getVezetekNev();
                  row[4] = allKindList.get(i).getKeresztNevek();                  
                   row[5] = allKindList.get(i).getHitelOsszeg();
                    row[6] = allKindList.get(i).getHiteStart();
                    row[7] = allKindList.get(i).getHiteEnd();
                    row[8] = allKindList.get(i).getLtpOsszeg();
                    row[9] = allKindList.get(i).getLtpStart();
                    row[10] = allKindList.get(i).getLtpEnd();                  
                    
              
                       model.addRow(row);
            
            }
        } catch (SQLException e) {
        }
        
    }//GEN-LAST:event_ClientsearchFieldKeyReleased

    private void LCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LCButtonActionPerformed
        // 
          try {
          
           
           allKindList = adatok.ClientLoanList();                 
           DefaultTableModel model = (DefaultTableModel)ClientSqlTable.getModel();
              model.setRowCount(0);
            
            Object [] row = new Object[11];
         
            for (int i = 0; i < allKindList.size(); i++) {
               
                row[0] = allKindList.get(i).getUgyfelId();
                 row[1] =  allKindList.get(i).getLoanId();
                  row[2] =  allKindList.get(i).getLtpId();
                  row[3] = allKindList.get(i).getVezetekNev();
                  row[4] = allKindList.get(i).getKeresztNevek();                  
                   row[5] = allKindList.get(i).getHitelOsszeg();
                    row[7] = allKindList.get(i).getHiteStart();
                    row[8] = allKindList.get(i).getHiteEnd();
                    row[6] = "";
                   row[9] = "";
                    row[10] = "";                  
                    
              
                       model.addRow(row);
            }
               
        } catch (SQLException | IndexOutOfBoundsException | NumberFormatException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_LCButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClientListaButton;
    private javax.swing.JTable ClientSqlTable;
    private javax.swing.JTextField ClientsearchField;
    private javax.swing.JButton LCButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
